name: DevOps CI/CD Library

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  # Build e Testes                                                                #
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
          
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  # Analise linder                                                                #
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#

  linter:
    name: Lint code base
    needs: [build]
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:        
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_CSS: true
          VALIDATE_MARKDOWN: true
          JAVASCRIPT_DEFAULT_STYLE: prettier

  analyze:
    name: Analyze
    needs: [linter]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
          
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  # Analise SonarCloud                                                            #
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
          
  sonarcloud:
    name: SonarCloud
    needs: [analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  # Deploy em Homologação (Heroku)                                                #
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#

  deploy-homolog:
    name: Deploy Homolog
    runs-on: ubuntu-latest
    environment:
      name: "homolog"
    needs: [sonarcloud]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to build on Heroku
          fetch-depth: 0

      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.10.9 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: devops-local-library-hom
          heroku_email: santos.pedroh@gmail.com
          justlogin: true

      - name: Set Heroku remote
        run: heroku git:remote -a devops-local-library-hom

      - name: Set env variables
        run: |
          heroku config:set MONGODB_URI=${{ secrets.DB_URI_HOM }}

      - name: Push code to Heroku
        run: git push heroku main

  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#
  # Deploy em Produção (Google App Enginer)                                       #
  #-------------------------------------------------------------------------------#
  #-------------------------------------------------------------------------------#

  deploy-prod:
    name: Deploy Production
    runs-on: ubuntu-latest
    environment:
      name: "production"
    needs: [deploy-homolog]  
    
    steps:
      - name: Checkout Code Deploy Google App Engine
        uses: actions/checkout@v2
        
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to App Engine
        run: gcloud app deploy app.yaml --quiet --no-promote --version v1
